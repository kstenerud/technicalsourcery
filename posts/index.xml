<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on ðŸª„ Technical Sourcery</title><link>https://www.technicalsourcery.net/posts/</link><description>Recent content in Posts on ðŸª„ Technical Sourcery</description><generator>Hugo -- gohugo.io</generator><language>en</language><copyright>Copyright Â© 2018-{year} Karl Stenerud. All Rights Reserved.</copyright><lastBuildDate>Thu, 06 Jan 2022 13:10:21 +0200</lastBuildDate><atom:link href="https://www.technicalsourcery.net/posts/index.xml" rel="self" type="application/rss+xml"/><item><title>Giving QR Codes Superpowers</title><link>https://www.technicalsourcery.net/posts/qr-superpowers/</link><pubDate>Thu, 06 Jan 2022 13:10:21 +0200</pubDate><guid>https://www.technicalsourcery.net/posts/qr-superpowers/</guid><description>QR codes are popular because they can store more information than bar codes, but they can&amp;rsquo;t store binary data and have no inherent structure. In this post, I&amp;rsquo;ll show how to overcome these limitations and give QR codes superpowers!
QR Codes and Their Limitations QR codes were invented by the Japanese company Denso Wave in the mid-90s as a way to get higher information density in machine-readable optical labels. They support a number of encoding methods including numeric digits, alphanumerics, kanji, and raw text.</description></item><item><title>Test-driving a NixOS VM using libvirt</title><link>https://www.technicalsourcery.net/posts/nixos-in-libvirt/</link><pubDate>Sun, 01 Aug 2021 14:11:43 +0100</pubDate><guid>https://www.technicalsourcery.net/posts/nixos-in-libvirt/</guid><description>NixOS has a lot of really cool ideas, but unfortunately installing on a VM is still tricky. This guide is designed as a &amp;ldquo;just get me something working, please!&amp;rdquo; way to get a headless NixOS install up and running in a libvirt VM.
Prerequisites You will need to have libvirt and virt-install on your system.
On Ubuntu:
1sudo apt update 2sudo apt install qemu-kvm libvirt-daemon-system virtinst On Redhat:
1sudo yum install kvm virt-manager libvirt libvirt-python python-virtinst You&amp;rsquo;ll also need the NixOS minimal ISO image Launching the VM Use the following as an example for launching your vm, picking a decent place to create your qcow2 disk image (you will be installing to this) so that you can find it later:</description></item><item><title>On Endianness</title><link>https://www.technicalsourcery.net/posts/on-endianness/</link><pubDate>Mon, 05 Jul 2021 08:02:22 +0100</pubDate><guid>https://www.technicalsourcery.net/posts/on-endianness/</guid><description>Byte Endianness in computers has been a constant source of conflict for decades. But is there really a clear advantage to one over the other? Let&amp;rsquo;s explore together!
Origins of the Term The terms &amp;ldquo;Little Endian&amp;rdquo; and &amp;ldquo;Big Endian&amp;rdquo; originate from Jonathan Swift&amp;rsquo;s 1726 novel &amp;ldquo;Gulliver&amp;rsquo;s Travels&amp;rdquo;. It tells of long strife culminating in a great and costly war between the empires of &amp;ldquo;Lilliput&amp;rdquo; and &amp;ldquo;Blefuscu&amp;rdquo;, because they disagreed about which end of a boiled egg to break for eating.</description></item><item><title>Line Lengths</title><link>https://www.technicalsourcery.net/posts/line-lengths/</link><pubDate>Sat, 30 May 2020 07:15:13 +0100</pubDate><guid>https://www.technicalsourcery.net/posts/line-lengths/</guid><description>Line lengths, like tab sizes, tabs vs spaces, and brace positioning, are among the most contentious topics in programming. This is to be expected, as predicted by Sayre&amp;rsquo;s Law : &amp;ldquo;In any dispute, the intensity of feeling is inversely proportional to the value of the issues at stake.&amp;rdquo; Naturally, contentious topics make for popular blog posts, so here we go!
I&amp;rsquo;ve been programming for almost 40 years, 25 of those professionally.</description></item><item><title>Virtual Linux Remote Desktop</title><link>https://www.technicalsourcery.net/posts/virtual-linux-remote-desktop/</link><pubDate>Wed, 03 Apr 2019 07:03:11 +0100</pubDate><guid>https://www.technicalsourcery.net/posts/virtual-linux-remote-desktop/</guid><description>Have you ever wanted a persistent Linux virtual desktop that you could host anywhere and access remotely? Now you can do it, using only Ubuntu and a cheap VPS!
I like having deterministic work environments. Disaster recovery becomes a cinch when you can just destroy and rebuild your desktop container, map your home directory back in, and continue working.
How it Works There are remote desktop packages that can operate on top of a purely software X window stack.</description></item><item><title>Introduction to High Availability</title><link>https://www.technicalsourcery.net/posts/intro-high-availability/</link><pubDate>Mon, 01 Apr 2019 18:16:47 +0200</pubDate><guid>https://www.technicalsourcery.net/posts/intro-high-availability/</guid><description>How important is uptime to you? How bad would it be if your services went down for 10 seconds? 10 minutes? 10 hours? 10 days? Every system has its breaking point, where the consequences become so severe that heads start rolling.
Once the breaking point for downtime is shorter than your worst-case time for fixing things, you need high-availability.
What is High Availability? High availability is a mechanism whereby multiple redundant services collaborate to minimize interruptions.</description></item><item><title>Time and Timezones: Getting it Right</title><link>https://www.technicalsourcery.net/posts/time-timezones/</link><pubDate>Sat, 30 Mar 2019 16:09:13 +0100</pubDate><guid>https://www.technicalsourcery.net/posts/time-timezones/</guid><description>Time is a tricky beast - quite possibly one of the trickiest things to get right in software engineering. Walk with me on a tour of time, and see why we keep getting it wrong.
There are two levels of time problems: advancing time and storing time. Advancing time deals with the nuances of leap years and leap seconds, and when and how and where you resolve the lost or gained time.</description></item></channel></rss>